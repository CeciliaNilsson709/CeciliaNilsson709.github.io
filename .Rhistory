library(jsonlite)
library(scholar)
library(dplyr)
library(fuzzyjoin)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE, comment = '')
Sys.setenv(TZ="UTC")
date <-Sys.Date()
## These are the only variables you need to set:
# set author id (you find it in the url string of your google scholar
# profile page, between "user=" and "&")
AU<-"A-9PdlkAAAAJ" #CN
#AU<-"pPk38-8AAAAJ" #KH
#AU<-"I1AkpCwAAAAJ" #VM
# list DOI's for papers you want altmetrics for. DOI without initial url.
# The order doesn't matter.
DOI <- c("10.1098/rsbl.2018.0485",
"10.1111/1365-2664.13174",
"10.1111/ecog.04003",
"10.1111/gcb.14531",
"10.1111/ecog.04028",
"10.1111/ecog.04083",
"10.1111/1365-2656.12420",
"10.1007/s00300-015-1708-x",
"10.1016/j.cub.2015.07.074",
"10.1111/jav.00707",
"10.1098/rsbl.2015.0337",
"10.1111/ibi.12704",
"10.1111/ecog.04582",
"10.1002/fee.2029",
"10.1111/2041-210X.13280",
"10.1098/rsbl.2019.0383",
"10.1007/s00265-014-1789-5",
"10.1093/czoolo/60.5.670",
"10.1093/czoolo/60.5.660",
"10.1086/670335",
"10.1098/rspb.2011.0058",
"10.1016/j.anbehav.2011.10.009",
"10.1111/j.1474-919X.2011.01130.x",
"10.1007/s00265-010-1015-z",
"10.1126/science.abi4680"
)
# extract author profile
Author<-get_profile(AU)
pub_list <-get_publications(AU)
pub_list
## Extract altmetrics from DOI's with altmetic API (DOI should be without url).
# Create data frame
altmetrics<-data.frame("title" = character(1),
"score"  = numeric(1),
"URL" = character(1),
"doi"  = character(1),
stringsAsFactors=FALSE)
# loop though DOIs, creating urls, recording json response and add to data frame.
# altmetiric score is rounded up (ceiling), because thats how it's displayed in badges.
for (i in DOI){
tryCatch({
url = paste0(
"https://api.altmetric.com/v1/doi/",i)
response = fromJSON(url)
a<-list(response$title[1],
ceiling(response$score[1]),
response$url[1],
response$doi[1])
#  paste(response$authors, collapse = ", ")))
}, error=function(cond){
url = paste0(
"https://api.crossref.org/works/",i)
response = fromJSON(url)
a<-list(response$message$title[1],
0,
response$message$URL[1],
response$message$DOI[1])
return(a)
},
finally={
altmetrics <-rbind(altmetrics, a)
}
)
}
# clean up data frame
altmetrics%>%
filter(title != "")->altmetrics
altmetrics
## Extract altmetrics from DOI's with altmetic API (DOI should be without url).
# Create data frame
altmetrics<-data.frame("title" = character(1),
"score"  = numeric(1),
"URL" = character(1),
"doi"  = character(1),
stringsAsFactors=FALSE)
# loop though DOIs, creating urls, recording json response and add to data frame.
# altmetiric score is rounded up (ceiling), because thats how it's displayed in badges.
for (i in DOI){
tryCatch({
url = paste0(
"https://api.altmetric.com/v1/doi/",i)
response = fromJSON(url)
altmetrics <-rbind(altmetrics, list(response$title[1],
ceiling(response$score[1]),
response$url[1],
response$doi[1]))
#  paste(response$authors, collapse = ", ")))
}, error=function(e){
}
)
}
# clean up data frame
altmetrics%>%
filter(title != "")->altmetrics
altmetrics
## Create table with publications, citations and altmetrics
# join publication list from google scholar with altmetrics.
# fuzzy join by title. Sort by decending year.
pub_list%>%
regex_left_join(altmetrics[, c("title","score", "URL", "doi")], by="title", ignore_case=TRUE)%>%
arrange(desc(year)) %>%
mutate(score = if_else(is.na(score), 0, score))->pub_list_alt
# set up "final textblock". If you want to change formating, do here and in loop below.
final<-paste0(pub_list_alt$author[1], " ",
"(",
pub_list_alt$year[1],
")", " ",
"[",
pub_list_alt$title.x[1],
".", "]",
"(",
pub_list_alt$URL[1],
")", " ",
pub_list_alt$journal[1]," ",
pub_list_alt$number[1], ", ",
"Citations: ",
pub_list_alt$cites[1], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[1],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>")
# add all publications to final table.
for (i in c(2:length(pub_list_alt$title.x)))
{
final<-paste(final, paste0(pub_list_alt$author[i], " ",
"(",
pub_list_alt$year[i],
")", " ",
"[",
pub_list_alt$title.x[i],
".", "]",
"(",
pub_list_alt$URL[i],
")", " ",
pub_list_alt$journal[i]," ",
pub_list_alt$number[i], ", ",
"Citations: ",
pub_list_alt$cites[i], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[i],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>"), sep = "  <br><br>  ")
}
final<-gsub(paste(Author$name[1]), paste0("**", Author$name[1], "**"), final)
final
pub_list%>%
rowwise() %>%
mutate(author=get_complete_authors(AU, pubid))->pub_list
pub_list
## Create table with publications, citations and altmetrics
# join publication list from google scholar with altmetrics.
# fuzzy join by title. Sort by decending year.
pub_list%>%
regex_left_join(altmetrics[, c("title","score", "URL", "doi")], by="title", ignore_case=TRUE)%>%
arrange(desc(year)) %>%
mutate(score = if_else(is.na(score), 0, score))->pub_list_alt
# set up "final textblock". If you want to change formating, do here and in loop below.
final<-paste0(pub_list_alt$author[1], " ",
"(",
pub_list_alt$year[1],
")", " ",
"[",
pub_list_alt$title.x[1],
".", "]",
"(",
pub_list_alt$URL[1],
")", " ",
pub_list_alt$journal[1]," ",
pub_list_alt$number[1], ", ",
"Citations: ",
pub_list_alt$cites[1], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[1],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>")
# add all publications to final table.
for (i in c(2:length(pub_list_alt$title.x)))
{
final<-paste(final, paste0(pub_list_alt$author[i], " ",
"(",
pub_list_alt$year[i],
")", " ",
"[",
pub_list_alt$title.x[i],
".", "]",
"(",
pub_list_alt$URL[i],
")", " ",
pub_list_alt$journal[i]," ",
pub_list_alt$number[i], ", ",
"Citations: ",
pub_list_alt$cites[i], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[i],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>"), sep = "  <br><br>  ")
}
## Create table with publications, citations and altmetrics
# join publication list from google scholar with altmetrics.
# fuzzy join by title. Sort by decending year.
pub_list%>%
regex_left_join(altmetrics[, c("title","score", "URL", "doi")], by="title", ignore_case=TRUE)%>%
arrange(desc(year)) %>%
mutate(score = if_else(is.na(score), 0, score))->pub_list_alt
# set up "final textblock". If you want to change formating, do here and in loop below.
final<-paste0(pub_list_alt$author[1], " ",
"(",
pub_list_alt$year[1],
")", " ",
"[",
pub_list_alt$title.x[1],
".", "]",
"(",
pub_list_alt$URL[1],
")", " ",
pub_list_alt$journal[1]," ",
pub_list_alt$number[1], ", ",
"Citations: ",
pub_list_alt$cites[1], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[1],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>")
# add all publications to final table.
for (i in c(2:length(pub_list_alt$title.x)))
{
final<-paste(final, paste0(pub_list_alt$author[i], " ",
"(",
pub_list_alt$year[i],
")", " ",
"[",
pub_list_alt$title.x[i],
".", "]",
"(",
pub_list_alt$URL[i],
")", " ",
pub_list_alt$journal[i]," ",
pub_list_alt$number[i], ", ",
"Citations: ",
pub_list_alt$cites[i], " ",
"<span data-badge-popover=\"right\" data-badge-type=\"4\" data-doi=\"",
pub_list_alt$doi[i],"\" ",
"data-hide-no-mentions=\"true\" data-hide-less-than=\"10\" class=\"altmetric-embed\"></span>"), sep = "  <br><br>  ")
}
final<-gsub(paste(Author$name[1]), paste0("**", Author$name[1], "**"), final)
final
title <-paste0("### **", Author$name[1], "**, ", Author$affiliation[1], "  <br><br> ", "#### Number of publications:", length(pub_list_alt$author), ", Total number of citations:", Author$total_cites[1], ", h index:", Author$h_index[1], ", i10 index:", Author$i10_index[1], "  <br><br> ")
View(pub_list_alt)
library(jsonlite)
library(scholar)
library(dplyr)
library(fuzzyjoin)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE, comment = '')
Sys.setenv(TZ="UTC")
date <-Sys.Date()
# extract author profile
Author<-get_profile(AU)
# extract full publication list from google scholar, with nr of citations
pub_list <-get_publications(AU)
# the full publication list above truncates long author lists.
# Replace with full authorlist:
# NOTE THIS PART GETS BLOCKED IF RERUN...
pub_list%>%
rowwise() %>%
mutate(author=get_complete_authors(AU, pubid))->pub_list
# extract author profile
Author<-get_profile(AU)
# extract full publication list from google scholar, with nr of citations
pub_list <-get_publications(AU)
# the full publication list above truncates long author lists.
# Replace with full authorlist:
# NOTE THIS PART GETS BLOCKED IF RERUN...
pub_list%>%
rowwise() %>%
mutate(author=get_complete_authors(AU, pubid))->pub_list
